'CR800Series Datalogger
'To create a different opening program template, type in new
'instructions and select Template | Save as Default Template
'rev 3 changed units to cf and cfs as needed
'rev 4 variable elimination and name changes, commented out all rain
'variables and calculations
'

'date:
'program author:

'Declare Public Variables
PreserveVariables

Const ModbusCom1 = ComSDC7
Const ModbusCom2 = ComSDC8

Public ModbusInterval As Long = 5

Public PTemp,BatVolts
'Public rain
'Public twentyfourhr_rain
'Public event_rain
'Public seasonal_rain
Public Sample_pacing_volume(2)
Public Interim_flow_total(2)
Public Attempted_smpl_events(2) As Long
Public SampleOn(2) As Boolean

Public Event_flow(2)
Alias Event_flow(1) = Event_flow1
Alias Event_flow(2) = Event_flow2

Public Sample_totalized_volume(2)

Public modbusdata(10)
Alias modbusdata(1) = Battery1_950
Alias modbusdata(2) = Level1_950
Alias modbusdata(3) = Flow1_950
Alias modbusdata(4) = Flow_total1_950
Alias modbusdata(5) = rain_950

Alias modbusdata(6) = Battery2_950
Alias modbusdata(7) = Level2_950
Alias modbusdata(8) = Flow2_950
Alias modbusdata(9) = Flow_total2_950

Public Attempted_smpl_events_reset(2) As Boolean

Public Successful_Smpl(2),SampleCounter(2) As Long
Public Flowrate_at_smpl_event(2)

'Public event_rain_reset As Boolean
'Public seasonal_rain_reset As Boolean
Public Hach_flow_reset(2) As Boolean
Public Sampling_Event_Reset As Boolean
Public Event_flow_reset(2) As Boolean
Public Sample_count_reset(2) As Boolean
Public master_reset As Boolean
Public execute As Boolean

Public battery_coms_result(2),level_coms_result(2),flow_coms_result(2),flow_tot_coms_result(2)
Public flow_tot_reset_coms_result(2),rain_950_coms_result(2)

Public battery_coms_fail_cntr(2) As Long,level_coms_fail_cntr(2) As Long,flow_coms_fail_cntr(2) As Long
Public flow_tot_coms_fail_cntr(2) As Long,rain_950_coms_fail_cntr(2) As Long

'Declare Other Variables
Dim i,'rain24running(8640)

Units BatVolts = volts
Units PTemp = degC
Units Battery1_950 = volts
Units Level1_950 = inches
Units Flow1_950 = cfs
Units Event_flow1 = cf
Units Flow_total1_950 = cf

Units Battery2_950 = volts
Units Level2_950 = inches
Units Flow2_950 = cfs
Units Event_flow2 = cf
Units Flow_total2_950 = cf
'Units rain_950 = ???
'Units rain = inches
'Units event_rain = inches
'Units twentyfourhr_rain = inches
'Units seasonal_rain = inches

'Define Data Tables
DataTable (sample_event1,Successful_Smpl(1) > 0.5,1000)
	Sample (1,Successful_Smpl(1),Long)
	Sample (1,Sample_pacing_volume(1),IEEE4)
	Sample (1,Flowrate_at_smpl_event(1),IEEE4)
	Totalize (1,SampleCounter(1),FP2,False)

	Sample (1,ModbusInterval,UINT2)
EndTable

DataTable (sample_event2,Successful_Smpl(2) > 0.5,1000)
	Sample (1,Successful_Smpl(2),Long)
	Sample (1,Sample_pacing_volume(2),IEEE4)
	Sample (1,Flowrate_at_smpl_event(2),IEEE4)
	Totalize (1,SampleCounter(2),FP2,False)

	Sample (1,ModbusInterval,UINT2)
EndTable

DataTable (minute,1,-1)
	DataInterval (0,1,Min,10)
	Sample (1,Flow1_950,IEEE4)
	Sample (1,Level1_950,IEEE4)
	Sample (1,Flow_total1_950,IEEE4)
	Sample (1,Sample_totalized_volume(1),IEEE4)
	Sample (1,Battery1_950,FP2)
	Sample (1,Successful_Smpl(1),UINT2)
	Sample (1,Sample_pacing_volume(1),IEEE4)
	Sample (1,Attempted_smpl_events(1),FP2)

	Sample (1,Flow2_950,IEEE4)
	Sample (1,Level2_950,IEEE4)
	Sample (1,Flow_total2_950,IEEE4)
	Sample (1,Sample_totalized_volume(2),IEEE4)
	Sample (1,Battery2_950,FP2)
	Sample (1,Successful_Smpl(2),UINT2)
	Sample (1,Sample_pacing_volume(2),IEEE4)
	Sample (1,Attempted_smpl_events(2),FP2)

	Sample (1,rain_950,IEEE4)
	Sample (1,ModbusInterval,UINT2)
EndTable

DataTable (hourly,1,-1)
	DataInterval (0,1,hr,10)
	Minimum (1,BatVolts,FP2,False,False)
	Totalize (1,Flow1_950,IEEE4,False)
	Totalize (1,Flow2_950,IEEE4,False)
	Sample (1,rain_950,FP2)

	Sample (2,battery_coms_fail_cntr(),FP2)
	Sample (2,level_coms_fail_cntr(),FP2)
	Sample (2,flow_coms_fail_cntr(),FP2)
	Sample (2,flow_tot_coms_fail_cntr(),FP2)
	Sample (1,ModbusInterval,UINT2)
EndTable

DataTable (daily,1,-1)
	DataInterval (0,1,hr,10)
	Minimum (1,BatVolts,FP2,False,False)
	Totalize (1,Flow1_950,IEEE4,False)
	Totalize (1,Flow2_950,IEEE4,False)

EndTable

'Main Program
BeginProg
	SW12(1)


	'  For i = 1 To 8640
	'    rain24running(i) = 0
	'  Next i

	SerialOpen (ComSDC7,19200,10,0,500)
	SerialOpen (ComSDC8,19200,10,0,500)

	Scan (10,Sec,10,0)

		PanelTemp (PTemp,250)
		Battery (BatVolts)

		' this section is not used with this station the rain gauge is connected to the Hach Flow Meter
		'    'collect tipping bucket rainfall information dry contact between pins A & C of rain gauge
		'    'calculate running 24hr rain total
		'    twentyfourhr_rain = 0
		'    For i = 8640 To 2 Step -1
		'      rain24running(i) = rain24running(i-1)
		'    Next i
		'    PulseCount (rain,1,2,2,0,0.01,0)
		'
		'    rain24running(1) = rain
		'    event_rain +=rain
		'    seasonal_rain += rain
		'    For i = 1 To 8640
		'      twentyfourhr_rain += rain24running(i)
		'    Next i


		'instruction to time stamp successful sample event #1
		PulseCount (Successful_Smpl(1),1,1,0,0,1.0,0)
		SampleCounter(1) += Successful_Smpl(1)

		'instruction to time stamp successful sample event #2
		PulseCount (Successful_Smpl(2),1,2,0,0,1.0,0)
		SampleCounter(2) += Successful_Smpl(2)

		'Call Output Tables
		CallTable (sample_event1)
		CallTable (sample_event2)
		CallTable (minute)
		CallTable (hourly)
		CallTable (daily)

		'reset section
		'    If seasonal_rain_reset Then
		'      seasonal_rain = 0
		'      seasonal_rain_reset = false
		'    EndIf
		'    If event_rain_reset Then
		'      event_rain = 0
		'      event_rain_reset = false
		'    EndIf


		If Sampling_Event_Reset Then
			Sampling_Event_Reset = false
			For i = 1 To 2
				Interim_flow_total(i) = 0
				SampleOn(i) = false
				Event_flow_reset(i) = true
				Sample_totalized_volume(i) = 0
				Attempted_smpl_events_reset(i) = true
			Next i
		EndIf

		For i = 1 To 2
			If Event_flow_reset(i) Then
				Event_flow_reset(i) = false
				Event_flow(i) = 0
			EndIf
			If Attempted_smpl_events_reset(i) Then
				Attempted_smpl_events_reset(i) = false
				Attempted_smpl_events(i) = 0
			EndIf
			If Sample_count_reset(i) Then
				Sample_count_reset(i) = false
				SampleCounter(i) = 0
			EndIf
		Next i

		If master_reset Then
			master_reset = false
			'      seasonal_rain = 0
			'      event_rain = 0

			For i = 1 To 2
				Event_flow(i) = 0
				SampleCounter(i) = 0
				Hach_flow_reset(i) = true
			Next i
		EndIf

	NextScan

	SlowSequence
	Scan (5,Sec,5,0)
		
		If IfTime (0,ModbusInterval,Sec) Then execute = TRUE

		If execute Then
			execute = false
			SerialOpen (ComSDC7,19200,10,0,500)
			SerialOpen (ComSDC8,19200,10,0,500)
			Delay (1,250,mSec)

			'------------------------------------------------------
			'Hach 950 number 1 - connected to CS105 w/SDC7 address
			'measure Hach 950 flowmeter - log flow, current flow rate, velocity, time/date
			'voltage, etc. @ 1-minute intervals

			'battery volts
			ModbusMaster (battery_coms_result(1),ModbusCom1,19200,1,3,Battery1_950,39,1,3,250,10)
			If battery_coms_result(1) > 0 Then battery_coms_fail_cntr(1) += 1

			'level
			ModbusMaster (level_coms_result(1),ModbusCom1,19200,1,3,Level1_950,7,1,3,250,10)
			If level_coms_result(1) > 0 Then level_coms_fail_cntr(1)  += 1

			'flow
			ModbusMaster (flow_coms_result(1),ModbusCom1,19200,1,3,Flow1_950,33,1,3,250,10)
			If flow_coms_result(1) = 0 Then
				Event_flow(1) += Flow1_950 * ModbusInterval

				'send 25-500ms pulses to sampler @ 12Vdc on pins A&C at accumulation of 1000L
				If SampleOn(1) Then
					Sample_totalized_volume(1) += Flow1_950 * ModbusInterval
					Interim_flow_total(1) += Flow1_950 * ModbusInterval
					If Interim_flow_total(1) >= Sample_pacing_volume(1) AND Sample_pacing_volume(1) > 0 Then
						PortSet(1,1)
						Delay (1,500,mSec)
						PortSet (1,0)
						Attempted_smpl_events(1) += 1
						Flowrate_at_smpl_event(1) = Flow1_950
						Interim_flow_total(1) -= Sample_pacing_volume(1)
					EndIf
				EndIf
			Else
				flow_coms_fail_cntr(1)  += 1
			EndIf

			'total flow
			ModbusMaster (flow_tot_coms_result(1),ModbusCom1,19200,1,3,Flow_total1_950,75,1,3,250,10)
			If flow_tot_coms_result(1) > 0 Then flow_tot_coms_fail_cntr(1) += 1

			'total flow reset
			If Hach_flow_reset(1) Then
				modbusdata(4) = 0
				ModbusMaster (flow_tot_reset_coms_result(1),ModbusCom1,19200,1,6,Flow_total1_950,75,1,3,250,10)
				Hach_flow_reset(1) = false
			EndIf

			'rain
			ModbusMaster (rain_950_coms_result(1),ModbusCom1,19200,1,3,rain_950,3,1,3,250,10)
			If rain_950_coms_result(1) > 0 Then rain_950_coms_fail_cntr(1) += 1
			'--------------------------------------------------------

			'========================================================
			'Hach 950 number 2 - connected to CS105 w/SDC8 address
			'measure Hach 950 flowmeter - log flow, current flow rate, velocity, time/date
			'voltage, etc. @ 1-minute intervals

			'battery volts
			ModbusMaster (battery_coms_result(2),ModbusCom2,19200,1,3,Battery2_950,39,1,3,250,10)
			If battery_coms_result(2) > 0 Then battery_coms_fail_cntr(2) += 1

			'level
			ModbusMaster (level_coms_result(2),ModbusCom2,19200,1,3,Level2_950,7,1,3,250,10)
			If level_coms_result(2) > 0 Then level_coms_fail_cntr(2)  += 1

			'flow
			ModbusMaster (flow_coms_result(2),ModbusCom2,19200,1,3,Flow2_950,33,1,3,250,10)
			If flow_coms_result(2) = 0 Then
				Event_flow(2) += Flow2_950 * ModbusInterval

				'send 25-500ms pulses to sampler @ 12Vdc on pins A&C at accumulation of 1000L
				If SampleOn(2) Then
					Sample_totalized_volume(2) += Flow2_950 * ModbusInterval
					Interim_flow_total(2) += Flow2_950 * ModbusInterval
					If Interim_flow_total(2) >= Sample_pacing_volume(2) AND Sample_pacing_volume(2) > 0 Then
						PortSet(3,1)
						Delay (1,500,mSec)
						PortSet (3,0)
						Attempted_smpl_events(2) += 1
						Flowrate_at_smpl_event(2) = Flow2_950
						Interim_flow_total(2) -= Sample_pacing_volume(2)
					EndIf
				EndIf
			Else
				flow_coms_fail_cntr(2)  += 1
			EndIf

			'total flow
			ModbusMaster (flow_tot_coms_result(2),ModbusCom2,19200,1,3,Flow_total2_950,75,1,3,250,10)
			If flow_tot_coms_result(2) > 0 Then flow_tot_coms_fail_cntr(2) += 1

			'total flow reset
			If Hach_flow_reset(2) Then
				modbusdata(9) = 0
				ModbusMaster (flow_tot_reset_coms_result(2),ModbusCom1,19200,1,6,Flow_total2_950,75,1,3,250,10)
				Hach_flow_reset(2) = false
			EndIf


			'    'rain
			'    ModbusMaster (rain_950_coms_result(1),ModbusCom1,19200,1,3,modbusdata(5),3,1,3,250,10)
			'    If rain_950_coms_result(1) > 0 Then rain_950_coms_fail_cntr(1) += 1
		EndIf
		'========================================================
		'--------------------------------------------------------

	NextScan
EndProg


